#include <stdlib.h>
#include <stdio.h>
#include <inttypes.h>
#include <string.h>

#include <3ds.h>

PrintConsole topScreen, bottomScreen;

/*static SwkbdCallbackResult MyCallback(void* user, const char** ppMessage, const 
char* text, size_t textlen)
{
        if (strstr(text, "https://"))
        {
                *ppMessage = "Sorry, HTTPS is not yet supported.";
                return SWKBD_CALLBACK_CONTINUE;
        }

        return SWKBD_CALLBACK_OK;
}*/

int main(int argc, char **argv)
{
	gfxInitDefault();
	//gfxSet3D(true); // uncomment if using stereoscopic 3D

        consoleInit(GFX_TOP, NULL);
        //consoleInit(GFX_BOTTOM, &bottomScreen);
        //consoleSelect(&topScreen);
	
	printf("3Downloader by jsa\n");
	printf("Version: %s\n\n", VERSION);
	
	static SwkbdState swkbd;
        static char mybuf[60];
        static SwkbdStatusData swkbdStatus;
        static SwkbdLearningData swkbdLearning;
        SwkbdButton button = SWKBD_BUTTON_NONE;
        bool didit = false;
	
didit = true;
swkbdInit(&swkbd, SWKBD_TYPE_NORMAL, 3, -1);
swkbdSetInitialText(&swkbd, mybuf);
swkbdSetHintText(&swkbd, "Please enter dank memes");
swkbdSetButton(&swkbd, SWKBD_BUTTON_LEFT, "Maybe Not", false);
swkbdSetButton(&swkbd, SWKBD_BUTTON_MIDDLE, "~Middle~", true);
swkbdSetButton(&swkbd, SWKBD_BUTTON_RIGHT, "Do It", true);
swkbdSetFeatures(&swkbd, SWKBD_PREDICTIVE_INPUT);
SwkbdDictWord words[2];
swkbdSetDictWord(&words[0], "vanilla", "white");
swkbdSetDictWord(&words[1], "chocolate", "dark");
swkbdSetDictionary(&swkbd, words, sizeof(words)/sizeof(SwkbdDictWord));
static bool reload = false;
swkbdSetStatusData(&swkbd, &swkbdStatus, reload, true);
swkbdSetLearningData(&swkbd, &swkbdLearning, reload, true);
reload = true;
button = swkbdInputText(&swkbd, mybuf, sizeof(mybuf));
	
if (didit) {
	if (button != SWKBD_BUTTON_NONE) {
		printf("You pressed button %d\n", button);
		printf("Text: %s\n", mybuf);
	} else {
		printf("swkbd event: %d\n", swkbdGetResult(&swkbd));
	}
}	

	// Main loop
	while (aptMainLoop())
	{
		gspWaitForVBlank();
		hidScanInput();

		// Your code goes here

		u32 kDown = hidKeysDown();
		if (kDown & KEY_START)
			break; // break in order to return to hbmenu

		// Flush and swap framebuffers
		gfxFlushBuffers();
		gfxSwapBuffers();
	}

	gfxExit();
	return 0;
}
